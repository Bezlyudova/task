"""data2

Revision ID: 26235ae49f5a
Revises: 64e05aaafb63
Create Date: 2024-06-01 20:30:16.896950

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '26235ae49f5a'
down_revision: Union[str, None] = '64e05aaafb63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'department', 'organisation', ['organisation_id'], ['id'])
    op.create_foreign_key(None, 'department', 'employee', ['master_id'], ['id'])
    op.create_foreign_key(None, 'department', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'department', 'employee', ['writer_id'], ['id'])
    op.create_foreign_key(None, 'department', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'organisation', ['organisation_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'employee', ['writer_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'department', ['department_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'position', ['position_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'organisation', 'organisation', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'organisation', 'employee', ['master_id'], ['id'])
    op.create_foreign_key(None, 'organisation', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'organisation', 'employee', ['writer_id'], ['id'])
    op.create_foreign_key(None, 'organisation', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'position', 'employee', ['writer_id'], ['id'])
    op.create_foreign_key(None, 'position', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'position', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'position', 'department', ['department_id'], ['id'])
    op.create_foreign_key(None, 'task', 'employee', ['started_by'], ['id'])
    op.create_foreign_key(None, 'task', 'employee', ['writer_id'], ['id'])
    op.create_foreign_key(None, 'task', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'task', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'task_and_assigner', 'employee', ['create_id'], ['id'])
    op.create_foreign_key(None, 'task_and_assigner', 'employee', ['employee_id'], ['id'])
    op.create_foreign_key(None, 'task_and_assigner', 'employee', ['deleter_id'], ['id'])
    op.create_foreign_key(None, 'task_and_assigner', 'task', ['task_id'], ['id'])
    op.create_foreign_key(None, 'task_and_assigner', 'employee', ['writer_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'task_and_assigner', type_='foreignkey')
    op.drop_constraint(None, 'task_and_assigner', type_='foreignkey')
    op.drop_constraint(None, 'task_and_assigner', type_='foreignkey')
    op.drop_constraint(None, 'task_and_assigner', type_='foreignkey')
    op.drop_constraint(None, 'task_and_assigner', type_='foreignkey')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_constraint(None, 'position', type_='foreignkey')
    op.drop_constraint(None, 'position', type_='foreignkey')
    op.drop_constraint(None, 'position', type_='foreignkey')
    op.drop_constraint(None, 'position', type_='foreignkey')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'department', type_='foreignkey')
    op.drop_constraint(None, 'department', type_='foreignkey')
    op.drop_constraint(None, 'department', type_='foreignkey')
    op.drop_constraint(None, 'department', type_='foreignkey')
    op.drop_constraint(None, 'department', type_='foreignkey')
    # ### end Alembic commands ###
